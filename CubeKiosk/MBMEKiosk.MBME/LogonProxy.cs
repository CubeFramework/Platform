//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MBMEKiosk.LogonProxy
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RequestBase", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MBMEKiosk.LogonProxy.LogOffKioskRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MBMEKiosk.LogonProxy.RegisterKioskRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MBMEKiosk.LogonProxy.LogOnKioskRequest))]
    public partial class RequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private int KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KioskRefNumField;

        private System.DateTime StatusUpdatedField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public int KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((this.KioskIdField.Equals(value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KioskRefNum
        {
            get
            {
                return this.KioskRefNumField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KioskRefNumField, value) != true))
                {
                    this.KioskRefNumField = value;
                    this.RaisePropertyChanged("KioskRefNum");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
        public System.DateTime StatusUpdated
        {
            get
            {
                return this.StatusUpdatedField;
            }
            set
            {
                if ((this.StatusUpdatedField.Equals(value) != true))
                {
                    this.StatusUpdatedField = value;
                    this.RaisePropertyChanged("StatusUpdated");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LogOffKioskRequest", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    public partial class LogOffKioskRequest : MBMEKiosk.LogonProxy.RequestBase
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RegisterKioskRequest", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    public partial class RegisterKioskRequest : MBMEKiosk.LogonProxy.RequestBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RegisterField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Register
        {
            get
            {
                return this.RegisterField;
            }
            set
            {
                if ((this.RegisterField.Equals(value) != true))
                {
                    this.RegisterField = value;
                    this.RaisePropertyChanged("Register");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LogOnKioskRequest", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    public partial class LogOnKioskRequest : MBMEKiosk.LogonProxy.RequestBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseVersionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseVersion
        {
            get
            {
                return this.ReleaseVersionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ReleaseVersionField, value) != true))
                {
                    this.ReleaseVersionField = value;
                    this.RaisePropertyChanged("ReleaseVersion");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ResponseBase", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MBMEKiosk.LogonProxy.LogOffKioskResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MBMEKiosk.LogonProxy.RegisterKioskResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MBMEKiosk.LogonProxy.LogOnKioskResponse))]
    public partial class ResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusUpdatedField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusUpdated
        {
            get
            {
                return this.StatusUpdatedField;
            }
            set
            {
                if ((this.StatusUpdatedField.Equals(value) != true))
                {
                    this.StatusUpdatedField = value;
                    this.RaisePropertyChanged("StatusUpdated");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LogOffKioskResponse", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    public partial class LogOffKioskResponse : MBMEKiosk.LogonProxy.ResponseBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isLoggedOffField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isLoggedOff
        {
            get
            {
                return this.isLoggedOffField;
            }
            set
            {
                if ((this.isLoggedOffField.Equals(value) != true))
                {
                    this.isLoggedOffField = value;
                    this.RaisePropertyChanged("isLoggedOff");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RegisterKioskResponse", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    public partial class RegisterKioskResponse : MBMEKiosk.LogonProxy.ResponseBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegisteredField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegistered
        {
            get
            {
                return this.IsRegisteredField;
            }
            set
            {
                if ((this.IsRegisteredField.Equals(value) != true))
                {
                    this.IsRegisteredField = value;
                    this.RaisePropertyChanged("IsRegistered");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LogOnKioskResponse", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    public partial class LogOnKioskResponse : MBMEKiosk.LogonProxy.ResponseBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MBMEKiosk.LogonProxy.KioskService[] BillerServiceListField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentTimeStampField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MBMEKiosk.LogonProxy.KioskDevice[] DeviceListField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KioskLocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isLoggedOnField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isMonitoredField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XXX12Field;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XXX12
        {
            get
            {
                return this.XXX12Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.XXX12Field, value) != true))
                {
                    this.XXX12Field = value;
                    this.RaisePropertyChanged("XXX12");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MBMEKiosk.LogonProxy.KioskService[] BillerServiceList
        {
            get
            {
                return this.BillerServiceListField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BillerServiceListField, value) != true))
                {
                    this.BillerServiceListField = value;
                    this.RaisePropertyChanged("BillerServiceList");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentTimeStamp
        {
            get
            {
                return this.CurrentTimeStampField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CurrentTimeStampField, value) != true))
                {
                    this.CurrentTimeStampField = value;
                    this.RaisePropertyChanged("CurrentTimeStamp");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MBMEKiosk.LogonProxy.KioskDevice[] DeviceList
        {
            get
            {
                return this.DeviceListField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceListField, value) != true))
                {
                    this.DeviceListField = value;
                    this.RaisePropertyChanged("DeviceList");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KioskLocation
        {
            get
            {
                return this.KioskLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KioskLocationField, value) != true))
                {
                    this.KioskLocationField = value;
                    this.RaisePropertyChanged("KioskLocation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isLoggedOn
        {
            get
            {
                return this.isLoggedOnField;
            }
            set
            {
                if ((this.isLoggedOnField.Equals(value) != true))
                {
                    this.isLoggedOnField = value;
                    this.RaisePropertyChanged("isLoggedOn");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isMonitored
        {
            get
            {
                return this.isMonitoredField;
            }
            set
            {
                if ((this.isMonitoredField.Equals(value) != true))
                {
                    this.isMonitoredField = value;
                    this.RaisePropertyChanged("isMonitored");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "KioskService", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Models")]
    [System.SerializableAttribute()]
    public partial class KioskService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivationDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillerServiceIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillerServiceNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KioskRefNumField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceKeyField;




        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath
        {
            get
            {
                return this.ImagePathField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true))
                {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivationDate
        {
            get
            {
                return this.ActivationDateField;
            }
            set
            {
                if ((this.ActivationDateField.Equals(value) != true))
                {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available
        {
            get
            {
                return this.AvailableField;
            }
            set
            {
                if ((this.AvailableField.Equals(value) != true))
                {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillerServiceId
        {
            get
            {
                return this.BillerServiceIdField;
            }
            set
            {
                if ((this.BillerServiceIdField.Equals(value) != true))
                {
                    this.BillerServiceIdField = value;
                    this.RaisePropertyChanged("BillerServiceId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillerServiceName
        {
            get
            {
                return this.BillerServiceNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BillerServiceNameField, value) != true))
                {
                    this.BillerServiceNameField = value;
                    this.RaisePropertyChanged("BillerServiceName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((this.KioskIdField.Equals(value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KioskRefNum
        {
            get
            {
                return this.KioskRefNumField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KioskRefNumField, value) != true))
                {
                    this.KioskRefNumField = value;
                    this.RaisePropertyChanged("KioskRefNum");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceKey
        {
            get
            {
                return this.ServiceKeyField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ServiceKeyField, value) != true))
                {
                    this.ServiceKeyField = value;
                    this.RaisePropertyChanged("ServiceKey");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "KioskDevice", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Models")]
    [System.SerializableAttribute()]
    public partial class KioskDevice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeviceEnabledField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceKeyField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KioskRefNumField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeviceEnabled
        {
            get
            {
                return this.DeviceEnabledField;
            }
            set
            {
                if ((this.DeviceEnabledField.Equals(value) != true))
                {
                    this.DeviceEnabledField = value;
                    this.RaisePropertyChanged("DeviceEnabled");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceId
        {
            get
            {
                return this.DeviceIdField;
            }
            set
            {
                if ((this.DeviceIdField.Equals(value) != true))
                {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceKey
        {
            get
            {
                return this.DeviceKeyField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceKeyField, value) != true))
                {
                    this.DeviceKeyField = value;
                    this.RaisePropertyChanged("DeviceKey");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName
        {
            get
            {
                return this.DeviceNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true))
                {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((this.KioskIdField.Equals(value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KioskRefNum
        {
            get
            {
                return this.KioskRefNumField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KioskRefNumField, value) != true))
                {
                    this.KioskRefNumField = value;
                    this.RaisePropertyChanged("KioskRefNum");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UpdateUtilityRequest", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.LogonService.Contracts")]
    [System.SerializableAttribute()]
    public partial class UpdateUtilityRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtilityNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified
        {
            get
            {
                return this.DateModifiedField;
            }
            set
            {
                if ((this.DateModifiedField.Equals(value) != true))
                {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                if ((this.SizeField.Equals(value) != true))
                {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtilityName
        {
            get
            {
                return this.UtilityNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UtilityNameField, value) != true))
                {
                    this.UtilityNameField = value;
                    this.RaisePropertyChanged("UtilityName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.VersionField, value) != true))
                {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "LogonProxy.ILogonService")]
    public interface ILogonService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ILogonService/LogOnKiosk", ReplyAction = "http://tempuri.org/ILogonService/LogOnKioskResponse")]
        MBMEKiosk.LogonProxy.LogOnKioskResponse LogOnKiosk(MBMEKiosk.LogonProxy.LogOnKioskRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/ILogonService/LogOnKiosk", ReplyAction = "http://tempuri.org/ILogonService/LogOnKioskResponse")]
        System.IAsyncResult BeginLogOnKiosk(MBMEKiosk.LogonProxy.LogOnKioskRequest request, System.AsyncCallback callback, object asyncState);

        MBMEKiosk.LogonProxy.LogOnKioskResponse EndLogOnKiosk(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ILogonService/LogOffKiosk", ReplyAction = "http://tempuri.org/ILogonService/LogOffKioskResponse")]
        MBMEKiosk.LogonProxy.LogOffKioskResponse LogOffKiosk(MBMEKiosk.LogonProxy.LogOffKioskRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/ILogonService/LogOffKiosk", ReplyAction = "http://tempuri.org/ILogonService/LogOffKioskResponse")]
        System.IAsyncResult BeginLogOffKiosk(MBMEKiosk.LogonProxy.LogOffKioskRequest request, System.AsyncCallback callback, object asyncState);

        MBMEKiosk.LogonProxy.LogOffKioskResponse EndLogOffKiosk(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ILogonService/RegisterKiosk", ReplyAction = "http://tempuri.org/ILogonService/RegisterKioskResponse")]
        MBMEKiosk.LogonProxy.RegisterKioskResponse RegisterKiosk(MBMEKiosk.LogonProxy.RegisterKioskRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/ILogonService/RegisterKiosk", ReplyAction = "http://tempuri.org/ILogonService/RegisterKioskResponse")]
        System.IAsyncResult BeginRegisterKiosk(MBMEKiosk.LogonProxy.RegisterKioskRequest request, System.AsyncCallback callback, object asyncState);

        MBMEKiosk.LogonProxy.RegisterKioskResponse EndRegisterKiosk(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ILogonService/LogOnUpdateUtility", ReplyAction = "http://tempuri.org/ILogonService/LogOnUpdateUtilityResponse")]
        long LogOnUpdateUtility(int kioskId, MBMEKiosk.LogonProxy.UpdateUtilityRequest[] requestList);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/ILogonService/LogOnUpdateUtility", ReplyAction = "http://tempuri.org/ILogonService/LogOnUpdateUtilityResponse")]
        System.IAsyncResult BeginLogOnUpdateUtility(int kioskId, MBMEKiosk.LogonProxy.UpdateUtilityRequest[] requestList, System.AsyncCallback callback, object asyncState);

        long EndLogOnUpdateUtility(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogonServiceChannel : MBMEKiosk.LogonProxy.ILogonService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogOnKioskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public LogOnKioskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public MBMEKiosk.LogonProxy.LogOnKioskResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((MBMEKiosk.LogonProxy.LogOnKioskResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogOffKioskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public LogOffKioskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public MBMEKiosk.LogonProxy.LogOffKioskResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((MBMEKiosk.LogonProxy.LogOffKioskResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterKioskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public RegisterKioskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public MBMEKiosk.LogonProxy.RegisterKioskResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((MBMEKiosk.LogonProxy.RegisterKioskResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogOnUpdateUtilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public LogOnUpdateUtilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public long Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogonServiceClient : System.ServiceModel.ClientBase<MBMEKiosk.LogonProxy.ILogonService>, MBMEKiosk.LogonProxy.ILogonService
    {

        private BeginOperationDelegate onBeginLogOnKioskDelegate;

        private EndOperationDelegate onEndLogOnKioskDelegate;

        private System.Threading.SendOrPostCallback onLogOnKioskCompletedDelegate;

        private BeginOperationDelegate onBeginLogOffKioskDelegate;

        private EndOperationDelegate onEndLogOffKioskDelegate;

        private System.Threading.SendOrPostCallback onLogOffKioskCompletedDelegate;

        private BeginOperationDelegate onBeginRegisterKioskDelegate;

        private EndOperationDelegate onEndRegisterKioskDelegate;

        private System.Threading.SendOrPostCallback onRegisterKioskCompletedDelegate;

        private BeginOperationDelegate onBeginLogOnUpdateUtilityDelegate;

        private EndOperationDelegate onEndLogOnUpdateUtilityDelegate;

        private System.Threading.SendOrPostCallback onLogOnUpdateUtilityCompletedDelegate;

        public LogonServiceClient()
        {
        }

        public LogonServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public LogonServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public LogonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public LogonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public event System.EventHandler<LogOnKioskCompletedEventArgs> LogOnKioskCompleted;

        public event System.EventHandler<LogOffKioskCompletedEventArgs> LogOffKioskCompleted;

        public event System.EventHandler<RegisterKioskCompletedEventArgs> RegisterKioskCompleted;

        public event System.EventHandler<LogOnUpdateUtilityCompletedEventArgs> LogOnUpdateUtilityCompleted;

        public MBMEKiosk.LogonProxy.LogOnKioskResponse LogOnKiosk(MBMEKiosk.LogonProxy.LogOnKioskRequest request)
        {
            return base.Channel.LogOnKiosk(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogOnKiosk(MBMEKiosk.LogonProxy.LogOnKioskRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginLogOnKiosk(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MBMEKiosk.LogonProxy.LogOnKioskResponse EndLogOnKiosk(System.IAsyncResult result)
        {
            return base.Channel.EndLogOnKiosk(result);
        }

        private System.IAsyncResult OnBeginLogOnKiosk(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            MBMEKiosk.LogonProxy.LogOnKioskRequest request = ((MBMEKiosk.LogonProxy.LogOnKioskRequest)(inValues[0]));
            return this.BeginLogOnKiosk(request, callback, asyncState);
        }

        private object[] OnEndLogOnKiosk(System.IAsyncResult result)
        {
            MBMEKiosk.LogonProxy.LogOnKioskResponse retVal = this.EndLogOnKiosk(result);
            return new object[] {
                    retVal};
        }

        private void OnLogOnKioskCompleted(object state)
        {
            if ((this.LogOnKioskCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogOnKioskCompleted(this, new LogOnKioskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void LogOnKioskAsync(MBMEKiosk.LogonProxy.LogOnKioskRequest request)
        {
            this.LogOnKioskAsync(request, null);
        }

        public void LogOnKioskAsync(MBMEKiosk.LogonProxy.LogOnKioskRequest request, object userState)
        {
            if ((this.onBeginLogOnKioskDelegate == null))
            {
                this.onBeginLogOnKioskDelegate = new BeginOperationDelegate(this.OnBeginLogOnKiosk);
            }
            if ((this.onEndLogOnKioskDelegate == null))
            {
                this.onEndLogOnKioskDelegate = new EndOperationDelegate(this.OnEndLogOnKiosk);
            }
            if ((this.onLogOnKioskCompletedDelegate == null))
            {
                this.onLogOnKioskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogOnKioskCompleted);
            }
            base.InvokeAsync(this.onBeginLogOnKioskDelegate, new object[] {
                        request}, this.onEndLogOnKioskDelegate, this.onLogOnKioskCompletedDelegate, userState);
        }

        public MBMEKiosk.LogonProxy.LogOffKioskResponse LogOffKiosk(MBMEKiosk.LogonProxy.LogOffKioskRequest request)
        {
            return base.Channel.LogOffKiosk(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogOffKiosk(MBMEKiosk.LogonProxy.LogOffKioskRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginLogOffKiosk(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MBMEKiosk.LogonProxy.LogOffKioskResponse EndLogOffKiosk(System.IAsyncResult result)
        {
            return base.Channel.EndLogOffKiosk(result);
        }

        private System.IAsyncResult OnBeginLogOffKiosk(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            MBMEKiosk.LogonProxy.LogOffKioskRequest request = ((MBMEKiosk.LogonProxy.LogOffKioskRequest)(inValues[0]));
            return this.BeginLogOffKiosk(request, callback, asyncState);
        }

        private object[] OnEndLogOffKiosk(System.IAsyncResult result)
        {
            MBMEKiosk.LogonProxy.LogOffKioskResponse retVal = this.EndLogOffKiosk(result);
            return new object[] {
                    retVal};
        }

        private void OnLogOffKioskCompleted(object state)
        {
            if ((this.LogOffKioskCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogOffKioskCompleted(this, new LogOffKioskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void LogOffKioskAsync(MBMEKiosk.LogonProxy.LogOffKioskRequest request)
        {
            this.LogOffKioskAsync(request, null);
        }

        public void LogOffKioskAsync(MBMEKiosk.LogonProxy.LogOffKioskRequest request, object userState)
        {
            if ((this.onBeginLogOffKioskDelegate == null))
            {
                this.onBeginLogOffKioskDelegate = new BeginOperationDelegate(this.OnBeginLogOffKiosk);
            }
            if ((this.onEndLogOffKioskDelegate == null))
            {
                this.onEndLogOffKioskDelegate = new EndOperationDelegate(this.OnEndLogOffKiosk);
            }
            if ((this.onLogOffKioskCompletedDelegate == null))
            {
                this.onLogOffKioskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogOffKioskCompleted);
            }
            base.InvokeAsync(this.onBeginLogOffKioskDelegate, new object[] {
                        request}, this.onEndLogOffKioskDelegate, this.onLogOffKioskCompletedDelegate, userState);
        }

        public MBMEKiosk.LogonProxy.RegisterKioskResponse RegisterKiosk(MBMEKiosk.LogonProxy.RegisterKioskRequest request)
        {
            return base.Channel.RegisterKiosk(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterKiosk(MBMEKiosk.LogonProxy.RegisterKioskRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRegisterKiosk(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MBMEKiosk.LogonProxy.RegisterKioskResponse EndRegisterKiosk(System.IAsyncResult result)
        {
            return base.Channel.EndRegisterKiosk(result);
        }

        private System.IAsyncResult OnBeginRegisterKiosk(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            MBMEKiosk.LogonProxy.RegisterKioskRequest request = ((MBMEKiosk.LogonProxy.RegisterKioskRequest)(inValues[0]));
            return this.BeginRegisterKiosk(request, callback, asyncState);
        }

        private object[] OnEndRegisterKiosk(System.IAsyncResult result)
        {
            MBMEKiosk.LogonProxy.RegisterKioskResponse retVal = this.EndRegisterKiosk(result);
            return new object[] {
                    retVal};
        }

        private void OnRegisterKioskCompleted(object state)
        {
            if ((this.RegisterKioskCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterKioskCompleted(this, new RegisterKioskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void RegisterKioskAsync(MBMEKiosk.LogonProxy.RegisterKioskRequest request)
        {
            this.RegisterKioskAsync(request, null);
        }

        public void RegisterKioskAsync(MBMEKiosk.LogonProxy.RegisterKioskRequest request, object userState)
        {
            if ((this.onBeginRegisterKioskDelegate == null))
            {
                this.onBeginRegisterKioskDelegate = new BeginOperationDelegate(this.OnBeginRegisterKiosk);
            }
            if ((this.onEndRegisterKioskDelegate == null))
            {
                this.onEndRegisterKioskDelegate = new EndOperationDelegate(this.OnEndRegisterKiosk);
            }
            if ((this.onRegisterKioskCompletedDelegate == null))
            {
                this.onRegisterKioskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterKioskCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterKioskDelegate, new object[] {
                        request}, this.onEndRegisterKioskDelegate, this.onRegisterKioskCompletedDelegate, userState);
        }

        public long LogOnUpdateUtility(int kioskId, MBMEKiosk.LogonProxy.UpdateUtilityRequest[] requestList)
        {
            return base.Channel.LogOnUpdateUtility(kioskId, requestList);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogOnUpdateUtility(int kioskId, MBMEKiosk.LogonProxy.UpdateUtilityRequest[] requestList, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginLogOnUpdateUtility(kioskId, requestList, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndLogOnUpdateUtility(System.IAsyncResult result)
        {
            return base.Channel.EndLogOnUpdateUtility(result);
        }

        private System.IAsyncResult OnBeginLogOnUpdateUtility(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int kioskId = ((int)(inValues[0]));
            MBMEKiosk.LogonProxy.UpdateUtilityRequest[] requestList = ((MBMEKiosk.LogonProxy.UpdateUtilityRequest[])(inValues[1]));
            return this.BeginLogOnUpdateUtility(kioskId, requestList, callback, asyncState);
        }

        private object[] OnEndLogOnUpdateUtility(System.IAsyncResult result)
        {
            long retVal = this.EndLogOnUpdateUtility(result);
            return new object[] {
                    retVal};
        }

        private void OnLogOnUpdateUtilityCompleted(object state)
        {
            if ((this.LogOnUpdateUtilityCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogOnUpdateUtilityCompleted(this, new LogOnUpdateUtilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void LogOnUpdateUtilityAsync(int kioskId, MBMEKiosk.LogonProxy.UpdateUtilityRequest[] requestList)
        {
            this.LogOnUpdateUtilityAsync(kioskId, requestList, null);
        }

        public void LogOnUpdateUtilityAsync(int kioskId, MBMEKiosk.LogonProxy.UpdateUtilityRequest[] requestList, object userState)
        {
            if ((this.onBeginLogOnUpdateUtilityDelegate == null))
            {
                this.onBeginLogOnUpdateUtilityDelegate = new BeginOperationDelegate(this.OnBeginLogOnUpdateUtility);
            }
            if ((this.onEndLogOnUpdateUtilityDelegate == null))
            {
                this.onEndLogOnUpdateUtilityDelegate = new EndOperationDelegate(this.OnEndLogOnUpdateUtility);
            }
            if ((this.onLogOnUpdateUtilityCompletedDelegate == null))
            {
                this.onLogOnUpdateUtilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogOnUpdateUtilityCompleted);
            }
            base.InvokeAsync(this.onBeginLogOnUpdateUtilityDelegate, new object[] {
                        kioskId,
                        requestList}, this.onEndLogOnUpdateUtilityDelegate, this.onLogOnUpdateUtilityCompletedDelegate, userState);
        }
    }
}
