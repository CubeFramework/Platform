//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace monitoringProxy
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PrintCycleLogModel", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class PrintCycleLogModel : monitoringProxy.ServiceRequestBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrnCycleIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceiptIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceiptTakenField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePrtField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrnCycleId
        {
            get
            {
                return this.PrnCycleIdField;
            }
            set
            {
                if ((this.PrnCycleIdField.Equals(value) != true))
                {
                    this.PrnCycleIdField = value;
                    this.RaisePropertyChanged("PrnCycleId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceiptId
        {
            get
            {
                return this.ReceiptIdField;
            }
            set
            {
                if ((this.ReceiptIdField.Equals(value) != true))
                {
                    this.ReceiptIdField = value;
                    this.RaisePropertyChanged("ReceiptId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceiptTaken
        {
            get
            {
                return this.ReceiptTakenField;
            }
            set
            {
                if ((this.ReceiptTakenField.Equals(value) != true))
                {
                    this.ReceiptTakenField = value;
                    this.RaisePropertyChanged("ReceiptTaken");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePrt
        {
            get
            {
                return this.TimePrtField;
            }
            set
            {
                if ((this.TimePrtField.Equals(value) != true))
                {
                    this.TimePrtField = value;
                    this.RaisePropertyChanged("TimePrt");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ServiceRequestBase", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.CashAccptanceCycleLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.EventLoggerModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.PrintCycleLogModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.PrintCycleLogModel[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.PostTransactionLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.PostTransactionLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.CashAccptanceCycleLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.EventLoggerModel[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.HealthCheckRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.DeviceEntity[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.DeviceEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.DeviceState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.DeviceStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.HealthCheckResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.KioskCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(monitoringProxy.CommandRequest))]
    public partial class ServiceRequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ObjectContextField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ReleaseField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RequestIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SessionIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VersionField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KioskIdField, value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ObjectContext
        {
            get
            {
                return this.ObjectContextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ObjectContextField, value) != true))
                {
                    this.ObjectContextField = value;
                    this.RaisePropertyChanged("ObjectContext");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Release
        {
            get
            {
                return this.ReleaseField;
            }
            set
            {
                if ((this.ReleaseField.Equals(value) != true))
                {
                    this.ReleaseField = value;
                    this.RaisePropertyChanged("Release");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RequestId
        {
            get
            {
                return this.RequestIdField;
            }
            set
            {
                if ((this.RequestIdField.Equals(value) != true))
                {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                if ((this.SessionIdField.Equals(value) != true))
                {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransId
        {
            get
            {
                return this.TransIdField;
            }
            set
            {
                if ((this.TransIdField.Equals(value) != true))
                {
                    this.TransIdField = value;
                    this.RaisePropertyChanged("TransId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                if ((this.VersionField.Equals(value) != true))
                {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CashAccptanceCycleLog", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class CashAccptanceCycleLog : monitoringProxy.ServiceRequestBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DenomValField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoteIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeInsField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TxnIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UploadedField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Accepted
        {
            get
            {
                return this.AcceptedField;
            }
            set
            {
                if ((this.AcceptedField.Equals(value) != true))
                {
                    this.AcceptedField = value;
                    this.RaisePropertyChanged("Accepted");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DenomVal
        {
            get
            {
                return this.DenomValField;
            }
            set
            {
                if ((this.DenomValField.Equals(value) != true))
                {
                    this.DenomValField = value;
                    this.RaisePropertyChanged("DenomVal");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoteId
        {
            get
            {
                return this.NoteIdField;
            }
            set
            {
                if ((this.NoteIdField.Equals(value) != true))
                {
                    this.NoteIdField = value;
                    this.RaisePropertyChanged("NoteId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeIns
        {
            get
            {
                return this.TimeInsField;
            }
            set
            {
                if ((this.TimeInsField.Equals(value) != true))
                {
                    this.TimeInsField = value;
                    this.RaisePropertyChanged("TimeIns");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TxnId
        {
            get
            {
                return this.TxnIdField;
            }
            set
            {
                if ((this.TxnIdField.Equals(value) != true))
                {
                    this.TxnIdField = value;
                    this.RaisePropertyChanged("TxnId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Uploaded
        {
            get
            {
                return this.UploadedField;
            }
            set
            {
                if ((this.UploadedField.Equals(value) != true))
                {
                    this.UploadedField = value;
                    this.RaisePropertyChanged("Uploaded");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EventLoggerModel", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class EventLoggerModel : monitoringProxy.ServiceRequestBase
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDtTmField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventLogIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc
        {
            get
            {
                return this.DescField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DescField, value) != true))
                {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDtTm
        {
            get
            {
                return this.EventDtTmField;
            }
            set
            {
                if ((this.EventDtTmField.Equals(value) != true))
                {
                    this.EventDtTmField = value;
                    this.RaisePropertyChanged("EventDtTm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventId
        {
            get
            {
                return this.EventIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EventIdField, value) != true))
                {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventLogId
        {
            get
            {
                return this.EventLogIdField;
            }
            set
            {
                if ((this.EventLogIdField.Equals(value) != true))
                {
                    this.EventLogIdField = value;
                    this.RaisePropertyChanged("EventLogId");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PostTransactionLog", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class PostTransactionLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillerIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillerRespMesgField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillerTxnrefNumField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerNumberField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field1Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field2Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field3Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Field4Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Field5Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Field6Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field7Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field8Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field9Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime KioskTxnDateTimeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long KioskTxnIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KioskTxnrefNumField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LastBalanceField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NewBalanceField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentModeIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductDetailField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RepostField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemRespMesgField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TxnAmountField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TxnDtTmField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TxnIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxnTypeIdField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillerId
        {
            get
            {
                return this.BillerIdField;
            }
            set
            {
                if ((this.BillerIdField.Equals(value) != true))
                {
                    this.BillerIdField = value;
                    this.RaisePropertyChanged("BillerId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillerRespMesg
        {
            get
            {
                return this.BillerRespMesgField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BillerRespMesgField, value) != true))
                {
                    this.BillerRespMesgField = value;
                    this.RaisePropertyChanged("BillerRespMesg");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillerTxnrefNum
        {
            get
            {
                return this.BillerTxnrefNumField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BillerTxnrefNumField, value) != true))
                {
                    this.BillerTxnrefNumField = value;
                    this.RaisePropertyChanged("BillerTxnrefNum");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerNumber
        {
            get
            {
                return this.ConsumerNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConsumerNumberField, value) != true))
                {
                    this.ConsumerNumberField = value;
                    this.RaisePropertyChanged("ConsumerNumber");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field1
        {
            get
            {
                return this.Field1Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Field1Field, value) != true))
                {
                    this.Field1Field = value;
                    this.RaisePropertyChanged("Field1");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field2
        {
            get
            {
                return this.Field2Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Field2Field, value) != true))
                {
                    this.Field2Field = value;
                    this.RaisePropertyChanged("Field2");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field3
        {
            get
            {
                return this.Field3Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Field3Field, value) != true))
                {
                    this.Field3Field = value;
                    this.RaisePropertyChanged("Field3");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Field4
        {
            get
            {
                return this.Field4Field;
            }
            set
            {
                if ((this.Field4Field.Equals(value) != true))
                {
                    this.Field4Field = value;
                    this.RaisePropertyChanged("Field4");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Field5
        {
            get
            {
                return this.Field5Field;
            }
            set
            {
                if ((this.Field5Field.Equals(value) != true))
                {
                    this.Field5Field = value;
                    this.RaisePropertyChanged("Field5");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Field6
        {
            get
            {
                return this.Field6Field;
            }
            set
            {
                if ((this.Field6Field.Equals(value) != true))
                {
                    this.Field6Field = value;
                    this.RaisePropertyChanged("Field6");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field7
        {
            get
            {
                return this.Field7Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Field7Field, value) != true))
                {
                    this.Field7Field = value;
                    this.RaisePropertyChanged("Field7");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field8
        {
            get
            {
                return this.Field8Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Field8Field, value) != true))
                {
                    this.Field8Field = value;
                    this.RaisePropertyChanged("Field8");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field9
        {
            get
            {
                return this.Field9Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Field9Field, value) != true))
                {
                    this.Field9Field = value;
                    this.RaisePropertyChanged("Field9");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((this.KioskIdField.Equals(value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime KioskTxnDateTime
        {
            get
            {
                return this.KioskTxnDateTimeField;
            }
            set
            {
                if ((this.KioskTxnDateTimeField.Equals(value) != true))
                {
                    this.KioskTxnDateTimeField = value;
                    this.RaisePropertyChanged("KioskTxnDateTime");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long KioskTxnId
        {
            get
            {
                return this.KioskTxnIdField;
            }
            set
            {
                if ((this.KioskTxnIdField.Equals(value) != true))
                {
                    this.KioskTxnIdField = value;
                    this.RaisePropertyChanged("KioskTxnId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KioskTxnrefNum
        {
            get
            {
                return this.KioskTxnrefNumField;
            }
            set
            {
                if ((object.ReferenceEquals(this.KioskTxnrefNumField, value) != true))
                {
                    this.KioskTxnrefNumField = value;
                    this.RaisePropertyChanged("KioskTxnrefNum");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LastBalance
        {
            get
            {
                return this.LastBalanceField;
            }
            set
            {
                if ((this.LastBalanceField.Equals(value) != true))
                {
                    this.LastBalanceField = value;
                    this.RaisePropertyChanged("LastBalance");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NewBalance
        {
            get
            {
                return this.NewBalanceField;
            }
            set
            {
                if ((this.NewBalanceField.Equals(value) != true))
                {
                    this.NewBalanceField = value;
                    this.RaisePropertyChanged("NewBalance");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentModeId
        {
            get
            {
                return this.PaymentModeIdField;
            }
            set
            {
                if ((this.PaymentModeIdField.Equals(value) != true))
                {
                    this.PaymentModeIdField = value;
                    this.RaisePropertyChanged("PaymentModeId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDetail
        {
            get
            {
                return this.ProductDetailField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProductDetailField, value) != true))
                {
                    this.ProductDetailField = value;
                    this.RaisePropertyChanged("ProductDetail");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Repost
        {
            get
            {
                return this.RepostField;
            }
            set
            {
                if ((this.RepostField.Equals(value) != true))
                {
                    this.RepostField = value;
                    this.RaisePropertyChanged("Repost");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseCode
        {
            get
            {
                return this.ResponseCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true))
                {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemRespMesg
        {
            get
            {
                return this.SystemRespMesgField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SystemRespMesgField, value) != true))
                {
                    this.SystemRespMesgField = value;
                    this.RaisePropertyChanged("SystemRespMesg");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TxnAmount
        {
            get
            {
                return this.TxnAmountField;
            }
            set
            {
                if ((this.TxnAmountField.Equals(value) != true))
                {
                    this.TxnAmountField = value;
                    this.RaisePropertyChanged("TxnAmount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TxnDtTm
        {
            get
            {
                return this.TxnDtTmField;
            }
            set
            {
                if ((this.TxnDtTmField.Equals(value) != true))
                {
                    this.TxnDtTmField = value;
                    this.RaisePropertyChanged("TxnDtTm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TxnId
        {
            get
            {
                return this.TxnIdField;
            }
            set
            {
                if ((this.TxnIdField.Equals(value) != true))
                {
                    this.TxnIdField = value;
                    this.RaisePropertyChanged("TxnId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxnTypeId
        {
            get
            {
                return this.TxnTypeIdField;
            }
            set
            {
                if ((this.TxnTypeIdField.Equals(value) != true))
                {
                    this.TxnTypeIdField = value;
                    this.RaisePropertyChanged("TxnTypeId");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HealthCheckRequest", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class HealthCheckRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private monitoringProxy.DeviceEntity[] DeviceListField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusChangedField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public monitoringProxy.DeviceEntity[] DeviceList
        {
            get
            {
                return this.DeviceListField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceListField, value) != true))
                {
                    this.DeviceListField = value;
                    this.RaisePropertyChanged("DeviceList");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((this.KioskIdField.Equals(value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusChanged
        {
            get
            {
                return this.StatusChangedField;
            }
            set
            {
                if ((this.StatusChangedField.Equals(value) != true))
                {
                    this.StatusChangedField = value;
                    this.RaisePropertyChanged("StatusChanged");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeviceEntity", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class DeviceEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private monitoringProxy.DeviceState StateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private monitoringProxy.DeviceStatus StatusField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true))
                {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId
        {
            get
            {
                return this.DeviceIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true))
                {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public monitoringProxy.DeviceState State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                if ((this.StateField.Equals(value) != true))
                {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public monitoringProxy.DeviceStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeviceState", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    public enum DeviceState : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnLine = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeviceStatus", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    public enum DeviceStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoError = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initializing = 4,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HealthCheckResponse", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class HealthCheckResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private monitoringProxy.KioskCommand CommandField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConnectedField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public monitoringProxy.KioskCommand Command
        {
            get
            {
                return this.CommandField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CommandField, value) != true))
                {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConnected
        {
            get
            {
                return this.IsConnectedField;
            }
            set
            {
                if ((this.IsConnectedField.Equals(value) != true))
                {
                    this.IsConnectedField = value;
                    this.RaisePropertyChanged("IsConnected");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "KioskCommand", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class KioskCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommandExecutedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommandIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandParameterField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExecutionDtTmField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QueueIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Command
        {
            get
            {
                return this.CommandField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CommandField, value) != true))
                {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommandExecuted
        {
            get
            {
                return this.CommandExecutedField;
            }
            set
            {
                if ((this.CommandExecutedField.Equals(value) != true))
                {
                    this.CommandExecutedField = value;
                    this.RaisePropertyChanged("CommandExecuted");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommandId
        {
            get
            {
                return this.CommandIdField;
            }
            set
            {
                if ((this.CommandIdField.Equals(value) != true))
                {
                    this.CommandIdField = value;
                    this.RaisePropertyChanged("CommandId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandParameter
        {
            get
            {
                return this.CommandParameterField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CommandParameterField, value) != true))
                {
                    this.CommandParameterField = value;
                    this.RaisePropertyChanged("CommandParameter");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExecutionDtTm
        {
            get
            {
                return this.ExecutionDtTmField;
            }
            set
            {
                if ((this.ExecutionDtTmField.Equals(value) != true))
                {
                    this.ExecutionDtTmField = value;
                    this.RaisePropertyChanged("ExecutionDtTm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDate
        {
            get
            {
                return this.IssuedDateField;
            }
            set
            {
                if ((this.IssuedDateField.Equals(value) != true))
                {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((this.KioskIdField.Equals(value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueueId
        {
            get
            {
                return this.QueueIdField;
            }
            set
            {
                if ((this.QueueIdField.Equals(value) != true))
                {
                    this.QueueIdField = value;
                    this.RaisePropertyChanged("QueueId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source
        {
            get
            {
                return this.SourceField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SourceField, value) != true))
                {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CommandRequest", Namespace = "http://schemas.datacontract.org/2004/07/MBMEServices.MonitoringService.Contracts")]
    [System.SerializableAttribute()]
    public partial class CommandRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandDescField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommandExecutedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommandIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandParamaterField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandSourceField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExecutedDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KioskIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QueueIdField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandDesc
        {
            get
            {
                return this.CommandDescField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CommandDescField, value) != true))
                {
                    this.CommandDescField = value;
                    this.RaisePropertyChanged("CommandDesc");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommandExecuted
        {
            get
            {
                return this.CommandExecutedField;
            }
            set
            {
                if ((this.CommandExecutedField.Equals(value) != true))
                {
                    this.CommandExecutedField = value;
                    this.RaisePropertyChanged("CommandExecuted");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommandId
        {
            get
            {
                return this.CommandIdField;
            }
            set
            {
                if ((this.CommandIdField.Equals(value) != true))
                {
                    this.CommandIdField = value;
                    this.RaisePropertyChanged("CommandId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandParamater
        {
            get
            {
                return this.CommandParamaterField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CommandParamaterField, value) != true))
                {
                    this.CommandParamaterField = value;
                    this.RaisePropertyChanged("CommandParamater");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandSource
        {
            get
            {
                return this.CommandSourceField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CommandSourceField, value) != true))
                {
                    this.CommandSourceField = value;
                    this.RaisePropertyChanged("CommandSource");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExecutedDate
        {
            get
            {
                return this.ExecutedDateField;
            }
            set
            {
                if ((this.ExecutedDateField.Equals(value) != true))
                {
                    this.ExecutedDateField = value;
                    this.RaisePropertyChanged("ExecutedDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDate
        {
            get
            {
                return this.IssuedDateField;
            }
            set
            {
                if ((this.IssuedDateField.Equals(value) != true))
                {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KioskId
        {
            get
            {
                return this.KioskIdField;
            }
            set
            {
                if ((this.KioskIdField.Equals(value) != true))
                {
                    this.KioskIdField = value;
                    this.RaisePropertyChanged("KioskId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageId
        {
            get
            {
                return this.PackageIdField;
            }
            set
            {
                if ((this.PackageIdField.Equals(value) != true))
                {
                    this.PackageIdField = value;
                    this.RaisePropertyChanged("PackageId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueueId
        {
            get
            {
                return this.QueueIdField;
            }
            set
            {
                if ((this.QueueIdField.Equals(value) != true))
                {
                    this.QueueIdField = value;
                    this.RaisePropertyChanged("QueueId");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "monitoringProxy.IMBMEMonitoringService")]
    public interface IMBMEMonitoringService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/CheckMonitoringBackendServiceHealth", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/CheckMonitoringBackendServiceHealthResp" +
            "onse")]
        bool CheckMonitoringBackendServiceHealth();

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/CheckMonitoringBackendServiceHealth", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/CheckMonitoringBackendServiceHealthResp" +
            "onse")]
        System.IAsyncResult BeginCheckMonitoringBackendServiceHealth(System.AsyncCallback callback, object asyncState);

        bool EndCheckMonitoringBackendServiceHealth(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/PostPrintCycleLogCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostPrintCycleLogCollectionResponse")]
        long PostPrintCycleLogCollection(monitoringProxy.PrintCycleLogModel[] request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/PostPrintCycleLogCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostPrintCycleLogCollectionResponse")]
        System.IAsyncResult BeginPostPrintCycleLogCollection(monitoringProxy.PrintCycleLogModel[] request, System.AsyncCallback callback, object asyncState);

        long EndPostPrintCycleLogCollection(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/PostTransactionLogCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostTransactionLogCollectionResponse")]
        System.Collections.Generic.Dictionary<string, string> PostTransactionLogCollection(monitoringProxy.PostTransactionLog[] request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/PostTransactionLogCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostTransactionLogCollectionResponse")]
        System.IAsyncResult BeginPostTransactionLogCollection(monitoringProxy.PostTransactionLog[] request, System.AsyncCallback callback, object asyncState);

        System.Collections.Generic.Dictionary<string, string> EndPostTransactionLogCollection(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/PostCashTxnCycleCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostCashTxnCycleCollectionResponse")]
        System.Collections.Generic.Dictionary<string, string> PostCashTxnCycleCollection(monitoringProxy.CashAccptanceCycleLog[] request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/PostCashTxnCycleCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostCashTxnCycleCollectionResponse")]
        System.IAsyncResult BeginPostCashTxnCycleCollection(monitoringProxy.CashAccptanceCycleLog[] request, System.AsyncCallback callback, object asyncState);

        System.Collections.Generic.Dictionary<string, string> EndPostCashTxnCycleCollection(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/PostEventLogCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostEventLogCollectionResponse")]
        System.Collections.Generic.Dictionary<string, string> PostEventLogCollection(monitoringProxy.EventLoggerModel[] request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/PostEventLogCollection", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/PostEventLogCollectionResponse")]
        System.IAsyncResult BeginPostEventLogCollection(monitoringProxy.EventLoggerModel[] request, System.AsyncCallback callback, object asyncState);

        System.Collections.Generic.Dictionary<string, string> EndPostEventLogCollection(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/CheckBackendConnectivity", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/CheckBackendConnectivityResponse")]
        monitoringProxy.HealthCheckResponse CheckBackendConnectivity(monitoringProxy.HealthCheckRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/CheckBackendConnectivity", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/CheckBackendConnectivityResponse")]
        System.IAsyncResult BeginCheckBackendConnectivity(monitoringProxy.HealthCheckRequest request, System.AsyncCallback callback, object asyncState);

        monitoringProxy.HealthCheckResponse EndCheckBackendConnectivity(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/IssueCommand", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/IssueCommandResponse")]
        long IssueCommand(monitoringProxy.CommandRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/IssueCommand", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/IssueCommandResponse")]
        System.IAsyncResult BeginIssueCommand(monitoringProxy.CommandRequest request, System.AsyncCallback callback, object asyncState);

        long EndIssueCommand(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMBMEMonitoringService/UpdatePackageCommandStatus", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/UpdatePackageCommandStatusResponse")]
        int UpdatePackageCommandStatus(monitoringProxy.CommandRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IMBMEMonitoringService/UpdatePackageCommandStatus", ReplyAction = "http://tempuri.org/IMBMEMonitoringService/UpdatePackageCommandStatusResponse")]
        System.IAsyncResult BeginUpdatePackageCommandStatus(monitoringProxy.CommandRequest request, System.AsyncCallback callback, object asyncState);

        int EndUpdatePackageCommandStatus(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMBMEMonitoringServiceChannel : monitoringProxy.IMBMEMonitoringService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckMonitoringBackendServiceHealthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public CheckMonitoringBackendServiceHealthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public bool Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostPrintCycleLogCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public PostPrintCycleLogCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public long Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostTransactionLogCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public PostTransactionLogCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.Generic.Dictionary<string, string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostCashTxnCycleCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public PostCashTxnCycleCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.Generic.Dictionary<string, string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostEventLogCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public PostEventLogCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.Generic.Dictionary<string, string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckBackendConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public CheckBackendConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public monitoringProxy.HealthCheckResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((monitoringProxy.HealthCheckResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IssueCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public IssueCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public long Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePackageCommandStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public UpdatePackageCommandStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public int Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MBMEMonitoringServiceClient : System.ServiceModel.ClientBase<monitoringProxy.IMBMEMonitoringService>, monitoringProxy.IMBMEMonitoringService
    {

        private BeginOperationDelegate onBeginCheckMonitoringBackendServiceHealthDelegate;

        private EndOperationDelegate onEndCheckMonitoringBackendServiceHealthDelegate;

        private System.Threading.SendOrPostCallback onCheckMonitoringBackendServiceHealthCompletedDelegate;

        private BeginOperationDelegate onBeginPostPrintCycleLogCollectionDelegate;

        private EndOperationDelegate onEndPostPrintCycleLogCollectionDelegate;

        private System.Threading.SendOrPostCallback onPostPrintCycleLogCollectionCompletedDelegate;

        private BeginOperationDelegate onBeginPostTransactionLogCollectionDelegate;

        private EndOperationDelegate onEndPostTransactionLogCollectionDelegate;

        private System.Threading.SendOrPostCallback onPostTransactionLogCollectionCompletedDelegate;

        private BeginOperationDelegate onBeginPostCashTxnCycleCollectionDelegate;

        private EndOperationDelegate onEndPostCashTxnCycleCollectionDelegate;

        private System.Threading.SendOrPostCallback onPostCashTxnCycleCollectionCompletedDelegate;

        private BeginOperationDelegate onBeginPostEventLogCollectionDelegate;

        private EndOperationDelegate onEndPostEventLogCollectionDelegate;

        private System.Threading.SendOrPostCallback onPostEventLogCollectionCompletedDelegate;

        private BeginOperationDelegate onBeginCheckBackendConnectivityDelegate;

        private EndOperationDelegate onEndCheckBackendConnectivityDelegate;

        private System.Threading.SendOrPostCallback onCheckBackendConnectivityCompletedDelegate;

        private BeginOperationDelegate onBeginIssueCommandDelegate;

        private EndOperationDelegate onEndIssueCommandDelegate;

        private System.Threading.SendOrPostCallback onIssueCommandCompletedDelegate;

        private BeginOperationDelegate onBeginUpdatePackageCommandStatusDelegate;

        private EndOperationDelegate onEndUpdatePackageCommandStatusDelegate;

        private System.Threading.SendOrPostCallback onUpdatePackageCommandStatusCompletedDelegate;

        public MBMEMonitoringServiceClient()
        {
        }

        public MBMEMonitoringServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public MBMEMonitoringServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public MBMEMonitoringServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public MBMEMonitoringServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public event System.EventHandler<CheckMonitoringBackendServiceHealthCompletedEventArgs> CheckMonitoringBackendServiceHealthCompleted;

        public event System.EventHandler<PostPrintCycleLogCollectionCompletedEventArgs> PostPrintCycleLogCollectionCompleted;

        public event System.EventHandler<PostTransactionLogCollectionCompletedEventArgs> PostTransactionLogCollectionCompleted;

        public event System.EventHandler<PostCashTxnCycleCollectionCompletedEventArgs> PostCashTxnCycleCollectionCompleted;

        public event System.EventHandler<PostEventLogCollectionCompletedEventArgs> PostEventLogCollectionCompleted;

        public event System.EventHandler<CheckBackendConnectivityCompletedEventArgs> CheckBackendConnectivityCompleted;

        public event System.EventHandler<IssueCommandCompletedEventArgs> IssueCommandCompleted;

        public event System.EventHandler<UpdatePackageCommandStatusCompletedEventArgs> UpdatePackageCommandStatusCompleted;

        public bool CheckMonitoringBackendServiceHealth()
        {
            return base.Channel.CheckMonitoringBackendServiceHealth();
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckMonitoringBackendServiceHealth(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCheckMonitoringBackendServiceHealth(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckMonitoringBackendServiceHealth(System.IAsyncResult result)
        {
            return base.Channel.EndCheckMonitoringBackendServiceHealth(result);
        }

        private System.IAsyncResult OnBeginCheckMonitoringBackendServiceHealth(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginCheckMonitoringBackendServiceHealth(callback, asyncState);
        }

        private object[] OnEndCheckMonitoringBackendServiceHealth(System.IAsyncResult result)
        {
            bool retVal = this.EndCheckMonitoringBackendServiceHealth(result);
            return new object[] {
                    retVal};
        }

        private void OnCheckMonitoringBackendServiceHealthCompleted(object state)
        {
            if ((this.CheckMonitoringBackendServiceHealthCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckMonitoringBackendServiceHealthCompleted(this, new CheckMonitoringBackendServiceHealthCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CheckMonitoringBackendServiceHealthAsync()
        {
            this.CheckMonitoringBackendServiceHealthAsync(null);
        }

        public void CheckMonitoringBackendServiceHealthAsync(object userState)
        {
            if ((this.onBeginCheckMonitoringBackendServiceHealthDelegate == null))
            {
                this.onBeginCheckMonitoringBackendServiceHealthDelegate = new BeginOperationDelegate(this.OnBeginCheckMonitoringBackendServiceHealth);
            }
            if ((this.onEndCheckMonitoringBackendServiceHealthDelegate == null))
            {
                this.onEndCheckMonitoringBackendServiceHealthDelegate = new EndOperationDelegate(this.OnEndCheckMonitoringBackendServiceHealth);
            }
            if ((this.onCheckMonitoringBackendServiceHealthCompletedDelegate == null))
            {
                this.onCheckMonitoringBackendServiceHealthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckMonitoringBackendServiceHealthCompleted);
            }
            base.InvokeAsync(this.onBeginCheckMonitoringBackendServiceHealthDelegate, null, this.onEndCheckMonitoringBackendServiceHealthDelegate, this.onCheckMonitoringBackendServiceHealthCompletedDelegate, userState);
        }

        public long PostPrintCycleLogCollection(monitoringProxy.PrintCycleLogModel[] request)
        {
            return base.Channel.PostPrintCycleLogCollection(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostPrintCycleLogCollection(monitoringProxy.PrintCycleLogModel[] request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginPostPrintCycleLogCollection(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndPostPrintCycleLogCollection(System.IAsyncResult result)
        {
            return base.Channel.EndPostPrintCycleLogCollection(result);
        }

        private System.IAsyncResult OnBeginPostPrintCycleLogCollection(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            monitoringProxy.PrintCycleLogModel[] request = ((monitoringProxy.PrintCycleLogModel[])(inValues[0]));
            return this.BeginPostPrintCycleLogCollection(request, callback, asyncState);
        }

        private object[] OnEndPostPrintCycleLogCollection(System.IAsyncResult result)
        {
            long retVal = this.EndPostPrintCycleLogCollection(result);
            return new object[] {
                    retVal};
        }

        private void OnPostPrintCycleLogCollectionCompleted(object state)
        {
            if ((this.PostPrintCycleLogCollectionCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostPrintCycleLogCollectionCompleted(this, new PostPrintCycleLogCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void PostPrintCycleLogCollectionAsync(monitoringProxy.PrintCycleLogModel[] request)
        {
            this.PostPrintCycleLogCollectionAsync(request, null);
        }

        public void PostPrintCycleLogCollectionAsync(monitoringProxy.PrintCycleLogModel[] request, object userState)
        {
            if ((this.onBeginPostPrintCycleLogCollectionDelegate == null))
            {
                this.onBeginPostPrintCycleLogCollectionDelegate = new BeginOperationDelegate(this.OnBeginPostPrintCycleLogCollection);
            }
            if ((this.onEndPostPrintCycleLogCollectionDelegate == null))
            {
                this.onEndPostPrintCycleLogCollectionDelegate = new EndOperationDelegate(this.OnEndPostPrintCycleLogCollection);
            }
            if ((this.onPostPrintCycleLogCollectionCompletedDelegate == null))
            {
                this.onPostPrintCycleLogCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostPrintCycleLogCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginPostPrintCycleLogCollectionDelegate, new object[] {
                        request}, this.onEndPostPrintCycleLogCollectionDelegate, this.onPostPrintCycleLogCollectionCompletedDelegate, userState);
        }

        public System.Collections.Generic.Dictionary<string, string> PostTransactionLogCollection(monitoringProxy.PostTransactionLog[] request)
        {
            return base.Channel.PostTransactionLogCollection(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostTransactionLogCollection(monitoringProxy.PostTransactionLog[] request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginPostTransactionLogCollection(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, string> EndPostTransactionLogCollection(System.IAsyncResult result)
        {
            return base.Channel.EndPostTransactionLogCollection(result);
        }

        private System.IAsyncResult OnBeginPostTransactionLogCollection(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            monitoringProxy.PostTransactionLog[] request = ((monitoringProxy.PostTransactionLog[])(inValues[0]));
            return this.BeginPostTransactionLogCollection(request, callback, asyncState);
        }

        private object[] OnEndPostTransactionLogCollection(System.IAsyncResult result)
        {
            System.Collections.Generic.Dictionary<string, string> retVal = this.EndPostTransactionLogCollection(result);
            return new object[] {
                    retVal};
        }

        private void OnPostTransactionLogCollectionCompleted(object state)
        {
            if ((this.PostTransactionLogCollectionCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostTransactionLogCollectionCompleted(this, new PostTransactionLogCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void PostTransactionLogCollectionAsync(monitoringProxy.PostTransactionLog[] request)
        {
            this.PostTransactionLogCollectionAsync(request, null);
        }

        public void PostTransactionLogCollectionAsync(monitoringProxy.PostTransactionLog[] request, object userState)
        {
            if ((this.onBeginPostTransactionLogCollectionDelegate == null))
            {
                this.onBeginPostTransactionLogCollectionDelegate = new BeginOperationDelegate(this.OnBeginPostTransactionLogCollection);
            }
            if ((this.onEndPostTransactionLogCollectionDelegate == null))
            {
                this.onEndPostTransactionLogCollectionDelegate = new EndOperationDelegate(this.OnEndPostTransactionLogCollection);
            }
            if ((this.onPostTransactionLogCollectionCompletedDelegate == null))
            {
                this.onPostTransactionLogCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostTransactionLogCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginPostTransactionLogCollectionDelegate, new object[] {
                        request}, this.onEndPostTransactionLogCollectionDelegate, this.onPostTransactionLogCollectionCompletedDelegate, userState);
        }

        public System.Collections.Generic.Dictionary<string, string> PostCashTxnCycleCollection(monitoringProxy.CashAccptanceCycleLog[] request)
        {
            return base.Channel.PostCashTxnCycleCollection(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostCashTxnCycleCollection(monitoringProxy.CashAccptanceCycleLog[] request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginPostCashTxnCycleCollection(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, string> EndPostCashTxnCycleCollection(System.IAsyncResult result)
        {
            return base.Channel.EndPostCashTxnCycleCollection(result);
        }

        private System.IAsyncResult OnBeginPostCashTxnCycleCollection(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            monitoringProxy.CashAccptanceCycleLog[] request = ((monitoringProxy.CashAccptanceCycleLog[])(inValues[0]));
            return this.BeginPostCashTxnCycleCollection(request, callback, asyncState);
        }

        private object[] OnEndPostCashTxnCycleCollection(System.IAsyncResult result)
        {
            System.Collections.Generic.Dictionary<string, string> retVal = this.EndPostCashTxnCycleCollection(result);
            return new object[] {
                    retVal};
        }

        private void OnPostCashTxnCycleCollectionCompleted(object state)
        {
            if ((this.PostCashTxnCycleCollectionCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostCashTxnCycleCollectionCompleted(this, new PostCashTxnCycleCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void PostCashTxnCycleCollectionAsync(monitoringProxy.CashAccptanceCycleLog[] request)
        {
            this.PostCashTxnCycleCollectionAsync(request, null);
        }

        public void PostCashTxnCycleCollectionAsync(monitoringProxy.CashAccptanceCycleLog[] request, object userState)
        {
            if ((this.onBeginPostCashTxnCycleCollectionDelegate == null))
            {
                this.onBeginPostCashTxnCycleCollectionDelegate = new BeginOperationDelegate(this.OnBeginPostCashTxnCycleCollection);
            }
            if ((this.onEndPostCashTxnCycleCollectionDelegate == null))
            {
                this.onEndPostCashTxnCycleCollectionDelegate = new EndOperationDelegate(this.OnEndPostCashTxnCycleCollection);
            }
            if ((this.onPostCashTxnCycleCollectionCompletedDelegate == null))
            {
                this.onPostCashTxnCycleCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostCashTxnCycleCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginPostCashTxnCycleCollectionDelegate, new object[] {
                        request}, this.onEndPostCashTxnCycleCollectionDelegate, this.onPostCashTxnCycleCollectionCompletedDelegate, userState);
        }

        public System.Collections.Generic.Dictionary<string, string> PostEventLogCollection(monitoringProxy.EventLoggerModel[] request)
        {
            return base.Channel.PostEventLogCollection(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostEventLogCollection(monitoringProxy.EventLoggerModel[] request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginPostEventLogCollection(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, string> EndPostEventLogCollection(System.IAsyncResult result)
        {
            return base.Channel.EndPostEventLogCollection(result);
        }

        private System.IAsyncResult OnBeginPostEventLogCollection(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            monitoringProxy.EventLoggerModel[] request = ((monitoringProxy.EventLoggerModel[])(inValues[0]));
            return this.BeginPostEventLogCollection(request, callback, asyncState);
        }

        private object[] OnEndPostEventLogCollection(System.IAsyncResult result)
        {
            System.Collections.Generic.Dictionary<string, string> retVal = this.EndPostEventLogCollection(result);
            return new object[] {
                    retVal};
        }

        private void OnPostEventLogCollectionCompleted(object state)
        {
            if ((this.PostEventLogCollectionCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostEventLogCollectionCompleted(this, new PostEventLogCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void PostEventLogCollectionAsync(monitoringProxy.EventLoggerModel[] request)
        {
            this.PostEventLogCollectionAsync(request, null);
        }

        public void PostEventLogCollectionAsync(monitoringProxy.EventLoggerModel[] request, object userState)
        {
            if ((this.onBeginPostEventLogCollectionDelegate == null))
            {
                this.onBeginPostEventLogCollectionDelegate = new BeginOperationDelegate(this.OnBeginPostEventLogCollection);
            }
            if ((this.onEndPostEventLogCollectionDelegate == null))
            {
                this.onEndPostEventLogCollectionDelegate = new EndOperationDelegate(this.OnEndPostEventLogCollection);
            }
            if ((this.onPostEventLogCollectionCompletedDelegate == null))
            {
                this.onPostEventLogCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostEventLogCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginPostEventLogCollectionDelegate, new object[] {
                        request}, this.onEndPostEventLogCollectionDelegate, this.onPostEventLogCollectionCompletedDelegate, userState);
        }

        public monitoringProxy.HealthCheckResponse CheckBackendConnectivity(monitoringProxy.HealthCheckRequest request)
        {
            return base.Channel.CheckBackendConnectivity(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckBackendConnectivity(monitoringProxy.HealthCheckRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCheckBackendConnectivity(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public monitoringProxy.HealthCheckResponse EndCheckBackendConnectivity(System.IAsyncResult result)
        {
            return base.Channel.EndCheckBackendConnectivity(result);
        }

        private System.IAsyncResult OnBeginCheckBackendConnectivity(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            monitoringProxy.HealthCheckRequest request = ((monitoringProxy.HealthCheckRequest)(inValues[0]));
            return this.BeginCheckBackendConnectivity(request, callback, asyncState);
        }

        private object[] OnEndCheckBackendConnectivity(System.IAsyncResult result)
        {
            monitoringProxy.HealthCheckResponse retVal = this.EndCheckBackendConnectivity(result);
            return new object[] {
                    retVal};
        }

        private void OnCheckBackendConnectivityCompleted(object state)
        {
            if ((this.CheckBackendConnectivityCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckBackendConnectivityCompleted(this, new CheckBackendConnectivityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CheckBackendConnectivityAsync(monitoringProxy.HealthCheckRequest request)
        {
            this.CheckBackendConnectivityAsync(request, null);
        }

        public void CheckBackendConnectivityAsync(monitoringProxy.HealthCheckRequest request, object userState)
        {
            if ((this.onBeginCheckBackendConnectivityDelegate == null))
            {
                this.onBeginCheckBackendConnectivityDelegate = new BeginOperationDelegate(this.OnBeginCheckBackendConnectivity);
            }
            if ((this.onEndCheckBackendConnectivityDelegate == null))
            {
                this.onEndCheckBackendConnectivityDelegate = new EndOperationDelegate(this.OnEndCheckBackendConnectivity);
            }
            if ((this.onCheckBackendConnectivityCompletedDelegate == null))
            {
                this.onCheckBackendConnectivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckBackendConnectivityCompleted);
            }
            base.InvokeAsync(this.onBeginCheckBackendConnectivityDelegate, new object[] {
                        request}, this.onEndCheckBackendConnectivityDelegate, this.onCheckBackendConnectivityCompletedDelegate, userState);
        }

        public long IssueCommand(monitoringProxy.CommandRequest request)
        {
            return base.Channel.IssueCommand(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIssueCommand(monitoringProxy.CommandRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginIssueCommand(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndIssueCommand(System.IAsyncResult result)
        {
            return base.Channel.EndIssueCommand(result);
        }

        private System.IAsyncResult OnBeginIssueCommand(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            monitoringProxy.CommandRequest request = ((monitoringProxy.CommandRequest)(inValues[0]));
            return this.BeginIssueCommand(request, callback, asyncState);
        }

        private object[] OnEndIssueCommand(System.IAsyncResult result)
        {
            long retVal = this.EndIssueCommand(result);
            return new object[] {
                    retVal};
        }

        private void OnIssueCommandCompleted(object state)
        {
            if ((this.IssueCommandCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IssueCommandCompleted(this, new IssueCommandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void IssueCommandAsync(monitoringProxy.CommandRequest request)
        {
            this.IssueCommandAsync(request, null);
        }

        public void IssueCommandAsync(monitoringProxy.CommandRequest request, object userState)
        {
            if ((this.onBeginIssueCommandDelegate == null))
            {
                this.onBeginIssueCommandDelegate = new BeginOperationDelegate(this.OnBeginIssueCommand);
            }
            if ((this.onEndIssueCommandDelegate == null))
            {
                this.onEndIssueCommandDelegate = new EndOperationDelegate(this.OnEndIssueCommand);
            }
            if ((this.onIssueCommandCompletedDelegate == null))
            {
                this.onIssueCommandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIssueCommandCompleted);
            }
            base.InvokeAsync(this.onBeginIssueCommandDelegate, new object[] {
                        request}, this.onEndIssueCommandDelegate, this.onIssueCommandCompletedDelegate, userState);
        }

        public int UpdatePackageCommandStatus(monitoringProxy.CommandRequest request)
        {
            return base.Channel.UpdatePackageCommandStatus(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePackageCommandStatus(monitoringProxy.CommandRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginUpdatePackageCommandStatus(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndUpdatePackageCommandStatus(System.IAsyncResult result)
        {
            return base.Channel.EndUpdatePackageCommandStatus(result);
        }

        private System.IAsyncResult OnBeginUpdatePackageCommandStatus(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            monitoringProxy.CommandRequest request = ((monitoringProxy.CommandRequest)(inValues[0]));
            return this.BeginUpdatePackageCommandStatus(request, callback, asyncState);
        }

        private object[] OnEndUpdatePackageCommandStatus(System.IAsyncResult result)
        {
            int retVal = this.EndUpdatePackageCommandStatus(result);
            return new object[] {
                    retVal};
        }

        private void OnUpdatePackageCommandStatusCompleted(object state)
        {
            if ((this.UpdatePackageCommandStatusCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePackageCommandStatusCompleted(this, new UpdatePackageCommandStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void UpdatePackageCommandStatusAsync(monitoringProxy.CommandRequest request)
        {
            this.UpdatePackageCommandStatusAsync(request, null);
        }

        public void UpdatePackageCommandStatusAsync(monitoringProxy.CommandRequest request, object userState)
        {
            if ((this.onBeginUpdatePackageCommandStatusDelegate == null))
            {
                this.onBeginUpdatePackageCommandStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdatePackageCommandStatus);
            }
            if ((this.onEndUpdatePackageCommandStatusDelegate == null))
            {
                this.onEndUpdatePackageCommandStatusDelegate = new EndOperationDelegate(this.OnEndUpdatePackageCommandStatus);
            }
            if ((this.onUpdatePackageCommandStatusCompletedDelegate == null))
            {
                this.onUpdatePackageCommandStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePackageCommandStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePackageCommandStatusDelegate, new object[] {
                        request}, this.onEndUpdatePackageCommandStatusDelegate, this.onUpdatePackageCommandStatusCompletedDelegate, userState);
        }
    }
}
